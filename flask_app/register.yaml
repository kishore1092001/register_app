apiVersion: v1
kind: ConfigMap
metadata:
  name: db-init-script
  namespace: sample
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS user_app;
    USE user_app;

    CREATE TABLE IF NOT EXISTS users (
        id INT AUTO_INCREMENT PRIMARY KEY,
        username VARCHAR(50) NOT NULL UNIQUE,
        password VARCHAR(255) NOT NULL
    );

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: sample
  labels:
    app: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: mysql
        image: mysql:5.7
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: rootpassword
        - name: MYSQL_DATABASE
          value: user_app
        volumeMounts:
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d/init.sql
          subPath: init.sql
      volumes:
      - name: init-script
        configMap:
          name: db-init-script

---

apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: sample
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: db
  clusterIP: None

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: sample
  labels:
    app: app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - name: flask-app
        image: kishore1092001/register_app
        ports:
        - containerPort: 5000
        env:
        - name: MYSQL_HOST
          value: db
        - name: MYSQL_USER
          value: root
        - name: MYSQL_PASSWORD
          value: rootpassword
        - name: MYSQL_DATABASE
          value: user_app
        command: ["/bin/sh", "-c"]
        args:
        - |
          while ! nc -z db 3306; do sleep 1; done;
          python /app/app.py

---

apiVersion: v1
kind: Service
metadata:
  name: app
  namespace: sample
spec:
  type: NodePort
  ports:
  - port: 5000
    targetPort: 5000
    nodePort: 30001
  selector:
    app: app
